using Deployf.Botf;
using Newtonsoft.Json;

using WorkHelpBot.Models.Output;

using WorkHelpBot.Interfaces;

class RefferalsController : BotController
{
	private ILogger<RefferalsController> _logger;
	private IConfiguration _configuration;
	private IEncodingService _encodingService;

	public RefferalsController(ILogger<RefferalsController> logger, IConfiguration configuration, IEncodingService encodingService)
	{
		_configuration = configuration;
		_logger = logger;
		_encodingService = encodingService;
	}

	[Action("ü´Ç—Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ü´Ç")]
	public async Task Refferals()
	{
		string referNickname = "";
		string referName = "";
		List<RefferalOutput> refferals = null;
		string refferalsStr = "";
		
		try
		{
			using(var client = new HttpClient())
			{
				var endpoint = new Uri($"{_configuration["apiUrl"]}/user/get/{FromId}");
				var jsonUser = client.GetAsync(endpoint).Result.Content.ReadAsStringAsync().Result;
				var user = JsonConvert.DeserializeObject<UserOutput>(jsonUser);

				referNickname = user.RefferNicknameTelegram;

				endpoint = new Uri($"{_configuration["apiUrl"]}/user/get/{user.RefferUserIdTelegram}");
				jsonUser = client.GetAsync(endpoint).Result.Content.ReadAsStringAsync().Result;
				user = JsonConvert.DeserializeObject<UserOutput>(jsonUser);

				referName = user.Name;
			}
		}
		catch(NullReferenceException)
		{
			referNickname = "";
			referName =  "";
		}

		try
		{
			using(var client = new HttpClient())
			{
				var endpoint = new Uri($"{_configuration["apiUrl"]}/refferal/get/{FromId}");
				var jsonRefferals = client.GetAsync(endpoint).Result.Content.ReadAsStringAsync().Result;
				refferals = JsonConvert.DeserializeObject<IEnumerable<RefferalOutput>>(jsonRefferals).ToList();
			}
		}
		catch(NullReferenceException e)
		{
			refferals = new List<RefferalOutput>();
		}
		catch(ArgumentNullException e)
		{
			refferals = new List<RefferalOutput>();
		}

		foreach(var item in refferals)
		{
			refferalsStr += $"@{item.RefferalNicknameTelegram} | {item.Earned}–≥—Ä–Ω. /{item.Earned * 1.93}—Ä—É–±. –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–æ\n";
		}

		KButton("‚¨ÖÔ∏è–Ω–∞–∑–∞–¥");
		PushL($"–¢–≤–æ–π —Ä–µ—Ñ–µ—Ä: @{referNickname} | {await _encodingService.Decode(referName)}\n\n–¢–∏ –º–æ–∂–µ—à—å –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞ –∏ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –±–æ–ª—å—à–µ –¥–µ–Ω–µ–≥. –¢–≤–æ–π –ø—Ä–æ—Ü–µ–Ω—Ç –∑–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: {_configuration["refferalProcent"]}%\n\n–¢–≤–æ—è —Å—Å—ã–ª–∫–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –¥—Ä—É–∑–µ–π:\n<a href='https://t.me/money_provided_bot?start={FromId}'>–¢–µ–±–µ –Ω—É–∂–Ω—ã –¥–µ–Ω—å–≥–∏ ? –ë–µ–∑ –ø—Ä–æ–±–ª–µ–º -> –ù–∞–∂–∏–º–∞–π –Ω–∞ —Ç–µ–∫—Å—Ç –∏ –∫–ª–∏–∫–∞–π /start –≤ –±–æ—Ç–µ –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π –¥–µ–Ω—å–≥–∏ –≤—ã–ø–æ–ª–Ω—è—è –ø—Ä–æ—Å—Ç—ã–µ –∑–∞–¥–∞–Ω–∏—è. –¢–∏ –Ω–µ –º–æ–∂–µ—à—å –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —ç—Ç–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ, —Ç–∞–∫ –∫–∞–∫ –º—ã –ø–ª–∞—Ç–∏–º +10% –ª—é–¥—è–º, –∫–æ—Ç–æ—Ä—ã–µ –∫–ª–∏–∫–Ω—É—Ç –∏–º–µ–Ω–Ω–æ –ø–æ —ç—Ç–æ–π —Å—Å—Ñ–ª–∫–µ\n\n–ù–∞–∂–º–∏ –Ω–∞ –º–µ–Ω—è –∏ –ø–æ–≥–Ω–∞–ª–∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ –±–∞–±–∫–∏ üòâ</a>\n\n–¢–≤–æ–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã: \n{refferalsStr}");
		await Send();
	}
}
